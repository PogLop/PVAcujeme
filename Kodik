class Klient
{
    // RSA
    private RSACryptoServiceProvider rsa;
    public string VerejnyKlic => rsa.ToXmlString(false); // veřejný klíč (jen ke čtení)
    private string privatniKlic => rsa.ToXmlString(true); // privátní klíč (jen vnitřní)

    // AES
    private byte[] aesKlic;
    private byte[] aesIV;

    public Klient(bool generujRSA = false)
    {
        if (generujRSA)
        {
            rsa = new RSACryptoServiceProvider(2048);
        }
    }

    public void PrijmiAESKlic(byte[] zasifrovanyKlic, byte[] iv)
    {
        rsa = new RSACryptoServiceProvider();
        rsa.FromXmlString(privatniKlic);
        aesKlic = rsa.Decrypt(zasifrovanyKlic, false);
        aesIV = iv;
    }

    // Klient A: zašifrování AES klíče pro klienta B
    public (byte[] zasifrovanyKlic, byte[] iv) SifrujAESKlic(string verejnyKlicB)
    {
        using (Aes aes = Aes.Create())
        {
            aes.GenerateKey();
            aes.GenerateIV();
            aesKlic = aes.Key;
            aesIV = aes.IV;

            RSACryptoServiceProvider rsaB = new RSACryptoServiceProvider();
            rsaB.FromXmlString(verejnyKlicB);

            byte[] zasifrovanyKlic = rsaB.Encrypt(aesKlic, false);
            return (zasifrovanyKlic, aesIV);
        }
    }

    // Šifrování zprávy pomocí AES
    public byte[] SifrujZpravu(string zprava)
    {
        using (Aes aes = Aes.Create())
        {
            aes.Key = aesKlic;
            aes.IV = aesIV;
            ICryptoTransform encryptor = aes.CreateEncryptor();
            byte[] plainBytes = Encoding.UTF8.GetBytes(zprava);
            return encryptor.TransformFinalBlock(plainBytes, 0, plainBytes.Length);
        }
    }

    // Dešifrování zprávy pomocí AES
    public string DesifrujZpravu(byte[] zasifrovanaZprava)
    {
        using (Aes aes = Aes.Create())
        {
            aes.Key = aesKlic;
            aes.IV = aesIV;
            ICryptoTransform decryptor = aes.CreateDecryptor();
            byte[] decryptedBytes = decryptor.TransformFinalBlock(zasifrovanaZprava, 0, zasifrovanaZprava.Length);
            return Encoding.UTF8.GetString(decryptedBytes);
        }
    }
}

public static void Main()
{

}
